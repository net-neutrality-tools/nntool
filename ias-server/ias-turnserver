#!/bin/bash
### BEGIN INIT INFO
# Provides:
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO

### BEGIN CONFIGURATION
# Credentials and realmname must match the configured values in the ias-module
credentials=berec:berec
realmname=berec
# Ports to be binded on, seperated by a space
ports=(123 500 4500 5060)
# IP v4 and v6 addresses to be binded on, seperated by a space. If no addresses are stated, all available IP v4 and v6 addresses will be used
ips=()
### END CONFIGURATION



dir="/etc/ias-server"
name="ias-turnserver"
pid_file="/var/run/$name.pid"
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"

get_pid() {
    pgrep -x turnserver
}

is_running() {
    [ -f "$pid_file" ] && ps -p `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        ipcmd=""
        for ip in "${ips[@]}"
        do
            ipcmd="$ipcmd -L $ip" 
        done

        echo "Starting $name"
        cd "$dir"
		for port in "${ports[@]}"
		do
			sudo turnserver -n -v -o --no-dtls --no-tls -u $credentials -r $realmname -p $port $ipcmd >> "$stdout_log" 2>> "$stderr_log" &
		done
        sleep 2
        echo $! > "$pid_file"
        if ! is_running; then
            echo "Unable to start, see $stdout_log and $stderr_log"
            exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name.."
        pkill -x turnserver
        for i in 1 2 3 4 5 6 7 8 9 10
        # for i in `seq 10`
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0

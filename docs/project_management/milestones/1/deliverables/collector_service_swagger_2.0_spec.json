{
    "info": {
        "termsOfService": "https://nntool.eu", 
        "description": "Collector REST API documentation of nntool.eu project.", 
        "license": {
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html", 
            "name": "Apache License 2.0"
        }, 
        "title": "Collector REST API", 
        "contact": {
            "url": "https://alladin.at", 
            "name": "alladin-IT GmbH"
        }, 
        "version": "v1"
    }, 
    "paths": {
        "/api/v1/documentation/json-schemas/data-model": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "additionalProperties": {
                                "type": "object"
                            }, 
                            "type": "object"
                        }
                    }
                }, 
                "produces": [
                    "application/json;charset=UTF-8"
                ], 
                "deprecated": false, 
                "description": "This returns the JSON schema of the data model classes.", 
                "tags": [
                    "documentation-resource"
                ], 
                "summary": "Returns the json schema of the data model classes.", 
                "operationId": "renderDataModelJsonSchemaUsingGET"
            }
        }, 
        "/api/v1/documentation/json-schemas/api": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "additionalProperties": {
                                "type": "object"
                            }, 
                            "type": "object"
                        }
                    }
                }, 
                "produces": [
                    "application/json;charset=UTF-8"
                ], 
                "deprecated": false, 
                "description": "This returns the JSON schema of the REST API DTO classes.", 
                "tags": [
                    "documentation-resource"
                ], 
                "summary": "Returns the json schema of the REST API DTO classes.", 
                "operationId": "renderApiJsonSchemaUsingGET"
            }
        }, 
        "/api/v1/measurement-agents/{agentUuid}/measurements/{uuid}/details": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse\u00abDetailMeasurementResponse\u00bb"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }, 
                "description": "Returns the measurement details, either in grouped or plain form.", 
                "parameters": [
                    {
                        "description": "The measurement agent's UUID", 
                        "required": true, 
                        "type": "string", 
                        "name": "agentUuid", 
                        "in": "path"
                    }, 
                    {
                        "description": "Flag that indicates if the details should be grouped", 
                        "allowEmptyValue": false, 
                        "default": false, 
                        "required": false, 
                        "x-example": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "grouped"
                    }, 
                    {
                        "description": "The measurement UUID", 
                        "required": true, 
                        "type": "string", 
                        "name": "uuid", 
                        "in": "path"
                    }
                ], 
                "produces": [
                    "application/json;charset=UTF-8"
                ], 
                "deprecated": false, 
                "tags": [
                    "measurement-agent-result-resource"
                ], 
                "summary": "Get details of a measurement.", 
                "operationId": "getMeasurementDetailsUsingGET"
            }
        }, 
        "/api/v1/versions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse\u00abVersionResponse\u00bb"
                        }
                    }
                }, 
                "produces": [
                    "application/json;charset=UTF-8"
                ], 
                "deprecated": false, 
                "description": "Returns the software version of the collector.", 
                "tags": [
                    "version-resource"
                ], 
                "summary": "Get the server version.", 
                "operationId": "getVersionUsingGET"
            }
        }, 
        "/api/v1/documentation/swagger-spec": {
            "get": {
                "responses": {
                    "301": {
                        "description": "Moved Permanently"
                    }
                }, 
                "produces": [
                    "*/*"
                ], 
                "deprecated": false, 
                "description": "This request redirects the user to the OpenAPI specification at /v2/api-docs?group=<group>.", 
                "tags": [
                    "documentation-resource"
                ], 
                "summary": "Redirects to the OpenApi specification.", 
                "operationId": "redirectToSwaggerSpecUsingGET"
            }
        }, 
        "/api/v1/measurement-agents/{agentUuid}/measurements": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse\u00abDisassociateResponse\u00bb"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }, 
                "description": "All measurements of this measurement agent will be disassociated, i.e. the connection between measurement and measurement agent will be removed. The measurements will no longer appear in the user's history and the measurements will no longer carry the agentUuid. This feature allows end user's with privacy concerns to use this measurement tool without fear.", 
                "parameters": [
                    {
                        "description": "The measurement agent's UUID", 
                        "required": true, 
                        "type": "string", 
                        "name": "agentUuid", 
                        "in": "path"
                    }
                ], 
                "produces": [
                    "application/json;charset=UTF-8"
                ], 
                "deprecated": false, 
                "tags": [
                    "measurement-agent-result-resource"
                ], 
                "summary": "Disassociate all measurements of this measurement agent.", 
                "operationId": "disassociateAllMeasurementsUsingDELETE"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse\u00abApiPagination\u00abBriefMeasurementResponse\u00bb\u00bb"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }, 
                "description": "This resource returns brief information of each measurement from the requesting measurement agent.", 
                "parameters": [
                    {
                        "description": "The measurement agent's UUID", 
                        "required": true, 
                        "type": "string", 
                        "name": "agentUuid", 
                        "in": "path"
                    }, 
                    {
                        "format": "int64", 
                        "required": false, 
                        "type": "integer", 
                        "name": "offset", 
                        "in": "query"
                    }, 
                    {
                        "format": "int32", 
                        "required": false, 
                        "type": "integer", 
                        "name": "pageNumber", 
                        "in": "query"
                    }, 
                    {
                        "format": "int32", 
                        "required": false, 
                        "type": "integer", 
                        "name": "pageSize", 
                        "in": "query"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "name": "paged", 
                        "in": "query"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "name": "sort.sorted", 
                        "in": "query"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "name": "sort.unsorted", 
                        "in": "query"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "name": "unpaged", 
                        "in": "query"
                    }
                ], 
                "produces": [
                    "application/json;charset=UTF-8"
                ], 
                "deprecated": false, 
                "tags": [
                    "measurement-agent-result-resource"
                ], 
                "summary": "Retrieve a (paginated) list of measurements made by this measurement agent.", 
                "operationId": "getMeasurementsUsingGET"
            }
        }, 
        "/api/v1/measurements": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse\u00abMeasurementResultResponse\u00bb"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }, 
                "description": "This resource retrieves finished measurements and stores them.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/LmapReportDto"
                        }, 
                        "description": "Measurement result", 
                        "required": false, 
                        "name": "measurementResultApiRequest", 
                        "in": "body"
                    }
                ], 
                "produces": [
                    "application/json;charset=UTF-8"
                ], 
                "deprecated": false, 
                "tags": [
                    "measurement-result-resource"
                ], 
                "summary": "Store measurement result.", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "putMeasurementUsingPOST"
            }
        }, 
        "/api/v1/documentation/swagger-ui": {
            "get": {
                "responses": {
                    "301": {
                        "description": "Moved Permanently"
                    }
                }, 
                "produces": [
                    "*/*"
                ], 
                "deprecated": false, 
                "description": "This request redirects the user to the swagger UI at /swagger-ui.html.", 
                "tags": [
                    "documentation-resource"
                ], 
                "summary": "Redirects to the swagger UI.", 
                "operationId": "redirectToSwaggerUiUsingGET"
            }
        }, 
        "/api/v1/measurement-agents/{agentUuid}/measurements/{uuid}": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse\u00abDisassociateResponse\u00bb"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }, 
                "description": "This measurement will be disassociated, i.e. the connection between measurement and measurement agent will be removed. The measurement will no longer appear in the user's history and the measurrment will no longer carry the agentUuid. This feature allows end user's with privacy concerns to use this measurement tool without fear.", 
                "parameters": [
                    {
                        "description": "The measurement agent's UUID", 
                        "required": true, 
                        "type": "string", 
                        "name": "agentUuid", 
                        "in": "path"
                    }, 
                    {
                        "description": "The measurement UUID", 
                        "required": true, 
                        "type": "string", 
                        "name": "uuid", 
                        "in": "path"
                    }
                ], 
                "produces": [
                    "application/json;charset=UTF-8"
                ], 
                "deprecated": false, 
                "tags": [
                    "measurement-agent-result-resource"
                ], 
                "summary": "Disassociate a single measurement.", 
                "operationId": "deleteMeasurementUsingDELETE"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse\u00abFullMeasurementResponse\u00bb"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }, 
                "description": "Returns a measurement by uuid with either all or a custom selection of measurement types.", 
                "parameters": [
                    {
                        "description": "The measurement agent's UUID", 
                        "required": true, 
                        "type": "string", 
                        "name": "agentUuid", 
                        "in": "path"
                    }, 
                    {
                        "enum": [
                            "SPEED", 
                            "QOS"
                        ], 
                        "description": "Set of included measurement types (e.g. SPEED, QOS). If nothing is provided all measurement types are returned", 
                        "allowEmptyValue": false, 
                        "items": {
                            "enum": [
                                "SPEED", 
                                "QOS"
                            ], 
                            "type": "string"
                        }, 
                        "required": false, 
                        "collectionFormat": "multi", 
                        "in": "query", 
                        "type": "array", 
                        "name": "include"
                    }, 
                    {
                        "description": "The measurement UUID", 
                        "required": true, 
                        "type": "string", 
                        "name": "uuid", 
                        "in": "path"
                    }
                ], 
                "produces": [
                    "application/json;charset=UTF-8"
                ], 
                "deprecated": false, 
                "tags": [
                    "measurement-agent-result-resource"
                ], 
                "summary": "Returns a measurement.", 
                "operationId": "getMeasurementUsingGET"
            }
        }
    }, 
    "tags": [
        {
            "name": "documentation-resource", 
            "description": "Documentation Resource"
        }, 
        {
            "name": "measurement-agent-result-resource", 
            "description": "Measurement Agent Result Resource"
        }, 
        {
            "name": "measurement-result-resource", 
            "description": "Measurement Result Resource"
        }, 
        {
            "name": "version-resource", 
            "description": "Version Resource"
        }
    ], 
    "basePath": "/", 
    "host": "localhost:8081", 
    "definitions": {
        "NetworkInfoDto": {
            "description": "Contains network related information gathered during the test.", 
            "required": [
                "network_point_in_time_info"
            ], 
            "type": "object", 
            "properties": {
                "network_point_in_time_info": {
                    "items": {
                        "$ref": "#/definitions/NetworkPointInTimeInfoDto"
                    }, 
                    "type": "array", 
                    "description": "Contains all relevant network information of a single point in time."
                }, 
                "signals": {
                    "items": {
                        "$ref": "#/definitions/SignalDto"
                    }, 
                    "type": "array", 
                    "description": "List of captured signal information."
                }, 
                "cell_locations": {
                    "items": {
                        "$ref": "#/definitions/CellLocationDto"
                    }, 
                    "type": "array", 
                    "description": "List of captured cell information."
                }
            }, 
            "title": "NetworkInfoDto"
        }, 
        "LmapOptionDto": {
            "description": "Options may be used to identify the role of a Task or to pass a Channel name to a Task.", 
            "type": "object", 
            "properties": {
                "value": {
                    "type": "string", 
                    "description": "The value of the option."
                }, 
                "id": {
                    "type": "string", 
                    "description": "An identifier uniquely identifying an option. This identifier is required by YANG to uniquely identify a name/value pair, but it otherwise has no semantic value."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the option."
                }, 
                "measurement-parameters": {
                    "description": "The additional measurement parameters of the option.", 
                    "$ref": "#/definitions/MeasurementTypeParameters"
                }
            }, 
            "title": "LmapOptionDto"
        }, 
        "GeoLocationDto": {
            "description": "GeoLocation object to be used on the measurement agent side and inside DTOs.", 
            "required": [
                "latitude", 
                "longitude", 
                "relative_time_ns", 
                "time"
            ], 
            "type": "object", 
            "properties": {
                "altitude": {
                    "type": "number", 
                    "description": "Geographic location altitude.", 
                    "format": "double"
                }, 
                "time": {
                    "type": "string", 
                    "description": "Time and date the geographic location information was captured (UTC).", 
                    "format": "date-time"
                }, 
                "longitude": {
                    "type": "number", 
                    "description": "Geographic location longitude.", 
                    "format": "double"
                }, 
                "provider": {
                    "type": "string", 
                    "description": "Geographic location provider."
                }, 
                "latitude": {
                    "type": "number", 
                    "description": "Geographic location latitude.", 
                    "format": "double"
                }, 
                "speed": {
                    "type": "number", 
                    "description": "Movement speed.", 
                    "format": "double"
                }, 
                "heading": {
                    "type": "number", 
                    "description": "Movement heading.", 
                    "format": "double"
                }, 
                "relative_time_ns": {
                    "type": "integer", 
                    "description": "Relative time in nanoseconds (to measurement begin).", 
                    "format": "int64"
                }, 
                "accuracy": {
                    "type": "number", 
                    "description": "Geographic location accuracy.", 
                    "format": "double"
                }
            }, 
            "title": "GeoLocationDto"
        }, 
        "NetworkPointInTimeInfoDto": {
            "description": "Contains all relevant network information of a single point in time.", 
            "required": [
                "network_type_id", 
                "network_type_name", 
                "relative_time_ns", 
                "time"
            ], 
            "type": "object", 
            "properties": {
                "network_type_name": {
                    "type": "string", 
                    "description": "Network type name."
                }, 
                "bssid": {
                    "type": "string", 
                    "description": "BSSID of the network."
                }, 
                "network_type_id": {
                    "type": "integer", 
                    "description": "Network type id as it gets returned by the Android API.", 
                    "format": "int32"
                }, 
                "relative_time_ns": {
                    "type": "integer", 
                    "description": "Time and date the signal information was captured (UTC).", 
                    "format": "int64"
                }, 
                "ssid": {
                    "type": "string", 
                    "description": "SSID of the network."
                }, 
                "country_code_asn": {
                    "type": "string", 
                    "description": "Country code derived from the AS (e.g. \"AT\")."
                }, 
                "sim_operator_mcc_mnc": {
                    "type": "string", 
                    "description": "The MCC/MNC of the SIM operator, if available."
                }, 
                "network_country": {
                    "type": "string", 
                    "description": "The network operator country code (e.g. \"AT\"), if available."
                }, 
                "agent_public_ip": {
                    "type": "string", 
                    "description": "Public IP address of the measurement agent."
                }, 
                "provider_name": {
                    "type": "string", 
                    "description": "The name of the provider."
                }, 
                "sim_country": {
                    "type": "string", 
                    "description": "The SIM operator country code (e.g. \"AT\"), if available."
                }, 
                "network_type_group_name": {
                    "type": "string", 
                    "description": "Network group name (e.g. 2G, 3G, LAN, etc)."
                }, 
                "network_type_category": {
                    "type": "string", 
                    "description": "Contains the different network categories."
                }, 
                "network_operator_mcc_mnc": {
                    "type": "string", 
                    "description": "The MCC/MNC of the network operator, if available."
                }, 
                "agent_public_ip_country_code": {
                    "type": "string", 
                    "description": "Country of the measurement agent which is gathered by Geo-IP lookup."
                }, 
                "public_ip_asn": {
                    "type": "integer", 
                    "description": "ASN for the public IP address.", 
                    "format": "int64"
                }, 
                "public_ip_as_name": {
                    "type": "string", 
                    "description": "Name of ASN."
                }, 
                "network_operator_name": {
                    "type": "string", 
                    "description": "The network operator name, if available."
                }, 
                "provider_short_name": {
                    "type": "string", 
                    "description": "The short name (or shortcut) of the provider."
                }, 
                "public_ip_rdns": {
                    "type": "string", 
                    "description": "Reverse DNS for the public IP address."
                }, 
                "sim_operator_name": {
                    "type": "string", 
                    "description": "SIM operator name, if available."
                }, 
                "time": {
                    "type": "string", 
                    "description": "Time and date the signal information was captured (UTC).", 
                    "format": "date-time"
                }
            }, 
            "title": "NetworkPointInTimeInfoDto"
        }, 
        "FullMeasurementResponse": {
            "description": "This DTO class contains all measurement information that is sent to the measurement agent.", 
            "required": [
                "agent_info", 
                "device_info", 
                "duration_ns", 
                "end_time", 
                "geo_locations", 
                "measurements", 
                "network_info", 
                "open_data_uuid", 
                "start_time", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "geo_locations": {
                    "items": {
                        "$ref": "#/definitions/GeoLocationDto"
                    }, 
                    "type": "array", 
                    "description": "List of all captured geographic locations."
                }, 
                "open_data_uuid": {
                    "type": "string", 
                    "description": "The open-data identifier (UUIDv4) of the measurement."
                }, 
                "source": {
                    "type": "string", 
                    "description": "Measurement source. Can be either own system or imported from open-data."
                }, 
                "start_time": {
                    "type": "string", 
                    "description": "Start Date and time for this (sub-) measurement.", 
                    "format": "date-time"
                }, 
                "measurements": {
                    "additionalProperties": {
                        "$ref": "#/definitions/FullSubMeasurement"
                    }, 
                    "type": "object", 
                    "description": "Contains the result of a Speed and/or QoS measurement."
                }, 
                "agent_info": {
                    "description": "Contains information about the measurement measurement agent.", 
                    "$ref": "#/definitions/MeasurementAgentInfoDto"
                }, 
                "duration_ns": {
                    "type": "integer", 
                    "description": "Duration of a measurement.", 
                    "format": "int64"
                }, 
                "device_info": {
                    "description": "Contains information about the device the measurement software is running on.", 
                    "$ref": "#/definitions/DeviceInfoDto"
                }, 
                "end_time": {
                    "type": "string", 
                    "description": "End Date and time for this (sub-) measurement. Date and time is always stored as UTC.", 
                    "format": "date-time"
                }, 
                "network_info": {
                    "description": "Contains network related information gathered during the test.", 
                    "$ref": "#/definitions/NetworkInfoDto"
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "The unique identifier (UUIDv4) of the measurement."
                }
            }, 
            "title": "FullMeasurementResponse"
        }, 
        "DeviceInfoDto": {
            "description": "Contains information about the device the measurement software is running on.", 
            "required": [
                "code_name", 
                "os_info"
            ], 
            "type": "object", 
            "properties": {
                "os_info": {
                    "description": "Contains information about the measurement agent's OS.", 
                    "$ref": "#/definitions/OperatingSystemInfoDto"
                }, 
                "model": {
                    "type": "string", 
                    "description": "Detailed device designation."
                }, 
                "full_name": {
                    "type": "string", 
                    "description": "The device name that is commonly known to users (e.g. Google Pixel)."
                }, 
                "code_name": {
                    "type": "string", 
                    "description": "Device code name."
                }
            }, 
            "title": "DeviceInfoDto"
        }, 
        "BriefDeviceInfo": {
            "description": "BriefDeviceInfo contains the most important values from DeviceInfo class.", 
            "required": [
                "device_code_name", 
                "os_name", 
                "os_version"
            ], 
            "type": "object", 
            "properties": {
                "os_name": {
                    "type": "string", 
                    "description": "Device operating system name."
                }, 
                "device_code_name": {
                    "type": "string", 
                    "description": "Device code name."
                }, 
                "avg_mem_usage": {
                    "type": "number", 
                    "description": "Average Memory usage during the measurement.", 
                    "format": "double"
                }, 
                "os_version": {
                    "type": "string", 
                    "description": "Device operating system version."
                }, 
                "avg_cpu_usage": {
                    "type": "number", 
                    "description": "Average CPU usage during the measurement.", 
                    "format": "double"
                }, 
                "device_full_name": {
                    "type": "string", 
                    "description": "The device name that is commonly known to users (e.g. Google Pixel)."
                }
            }, 
            "title": "BriefDeviceInfo"
        }, 
        "ApiResponse\u00abMeasurementResultResponse\u00bb": {
            "description": "Object that is used as wrapper for every response.", 
            "required": [
                "data"
            ], 
            "type": "object", 
            "properties": {
                "errors": {
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }, 
                    "type": "array", 
                    "description": "Optional list of errors that occurred during request processing."
                }, 
                "data": {
                    "description": "Actual data that is returned for the request/response.", 
                    "$ref": "#/definitions/MeasurementResultResponse"
                }
            }, 
            "title": "ApiResponse\u00abMeasurementResultResponse\u00bb"
        }, 
        "ApiResponse": {
            "description": "Object that is used as wrapper for every response.", 
            "required": [
                "data"
            ], 
            "type": "object", 
            "properties": {
                "errors": {
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }, 
                    "type": "array", 
                    "description": "Optional list of errors that occurred during request processing."
                }, 
                "data": {
                    "type": "object", 
                    "description": "Actual data that is returned for the request/response."
                }
            }, 
            "title": "ApiResponse"
        }, 
        "LmapConflictDto": {
            "description": "The names of Tasks overlapping with the execution of the Task that has produced this result.", 
            "type": "object", 
            "properties": {
                "task-name": {
                    "type": "string", 
                    "description": "The name of the Task executed by an Action within the Schedule that might have impacted the execution of the Task that has produced this result."
                }, 
                "action-name": {
                    "type": "string", 
                    "description": "The name of an Action within the Schedule that might have impacted the execution of the Task that has produced this result."
                }, 
                "schedule-name": {
                    "type": "string", 
                    "description": "The names of Tasks overlapping with the execution of the Task that has produced this result."
                }
            }, 
            "title": "LmapConflictDto"
        }, 
        "TimeBasedResultDto": {
            "description": "This module defines a data model for reporting time based results from Measurement Agents.", 
            "required": [
                "duration_ns", 
                "end_time", 
                "network_points_in_time", 
                "start_time"
            ], 
            "type": "object", 
            "properties": {
                "signals": {
                    "items": {
                        "$ref": "#/definitions/SignalDto"
                    }, 
                    "type": "array", 
                    "description": "List of captured signal information."
                }, 
                "cpu_usage": {
                    "items": {
                        "$ref": "#/definitions/PointInTimeValueDto\u00abdouble\u00bb"
                    }, 
                    "type": "array", 
                    "description": "CPU usage during the test, if available."
                }, 
                "start_time": {
                    "type": "string", 
                    "description": "Start date and time for this measurement. Date and time is always stored as UTC.", 
                    "format": "date-time"
                }, 
                "mem_usage": {
                    "items": {
                        "$ref": "#/definitions/PointInTimeValueDto\u00abdouble\u00bb"
                    }, 
                    "type": "array", 
                    "description": "Memory usage during the test, if available."
                }, 
                "network_points_in_time": {
                    "items": {
                        "$ref": "#/definitions/MeasurementResultNetworkPointInTimeDto"
                    }, 
                    "type": "array", 
                    "description": "Contains all relevant network information of a single point in time."
                }, 
                "duration_ns": {
                    "type": "integer", 
                    "description": "Overall duration of this measurement.", 
                    "format": "int64"
                }, 
                "geo_locations": {
                    "items": {
                        "$ref": "#/definitions/GeoLocationDto"
                    }, 
                    "type": "array", 
                    "description": "List of all captured geographic locations."
                }, 
                "end_time": {
                    "type": "string", 
                    "description": "End date and time for this measurement. Date and time is always stored as UTC.", 
                    "format": "date-time"
                }, 
                "cell_locations": {
                    "items": {
                        "$ref": "#/definitions/CellLocationDto"
                    }, 
                    "type": "array", 
                    "description": "List of captured cell information."
                }
            }, 
            "title": "TimeBasedResultDto"
        }, 
        "ApiResponse\u00abDetailMeasurementResponse\u00bb": {
            "description": "Object that is used as wrapper for every response.", 
            "required": [
                "data"
            ], 
            "type": "object", 
            "properties": {
                "errors": {
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }, 
                    "type": "array", 
                    "description": "Optional list of errors that occurred during request processing."
                }, 
                "data": {
                    "description": "Actual data that is returned for the request/response.", 
                    "$ref": "#/definitions/DetailMeasurementResponse"
                }
            }, 
            "title": "ApiResponse\u00abDetailMeasurementResponse\u00bb"
        }, 
        "MeasurementAgentInfoDto": {
            "description": "Contains information about the measurement agent.", 
            "required": [
                "app_version_code", 
                "app_version_name", 
                "language", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "language": {
                    "type": "string", 
                    "description": "The agent's language."
                }, 
                "app_version_name": {
                    "type": "string", 
                    "description": "Application version name (e.g. 1.0.0)."
                }, 
                "app_git_revision": {
                    "type": "string", 
                    "description": "Git revision name."
                }, 
                "app_version_code": {
                    "type": "integer", 
                    "description": "Application version code number (e.g. 10).", 
                    "format": "int32"
                }, 
                "timezone": {
                    "type": "string", 
                    "description": "The agent's time zone (e.g. UTC-6h)."
                }, 
                "type": {
                    "enum": [
                        "MOBILE", 
                        "BROWSER", 
                        "DESKTOP"
                    ], 
                    "type": "string", 
                    "description": "The type of agent."
                }
            }, 
            "title": "MeasurementAgentInfoDto"
        }, 
        "ApiResponse\u00abFullMeasurementResponse\u00bb": {
            "description": "Object that is used as wrapper for every response.", 
            "required": [
                "data"
            ], 
            "type": "object", 
            "properties": {
                "errors": {
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }, 
                    "type": "array", 
                    "description": "Optional list of errors that occurred during request processing."
                }, 
                "data": {
                    "description": "Actual data that is returned for the request/response.", 
                    "$ref": "#/definitions/FullMeasurementResponse"
                }
            }, 
            "title": "ApiResponse\u00abFullMeasurementResponse\u00bb"
        }, 
        "ApiRequestInfo": {
            "description": "Additional information that is sent by measurement agent alongside the request.", 
            "required": [
                "agent_type", 
                "agent_uuid", 
                "app_version_name", 
                "code_name", 
                "language", 
                "os_name", 
                "os_version"
            ], 
            "type": "object", 
            "properties": {
                "os_name": {
                    "type": "string", 
                    "description": "Operating system name."
                }, 
                "language": {
                    "type": "string", 
                    "description": "Language specified by the measurement agent."
                }, 
                "app_version_name": {
                    "type": "string", 
                    "description": "Application version name (e.g. 1.0.0)."
                }, 
                "app_git_revision": {
                    "type": "string", 
                    "description": "Git revision name."
                }, 
                "agent_uuid": {
                    "type": "string", 
                    "description": "The agent's UUID. This value is ignored if the resource path already contains the agent's UUID."
                }, 
                "os_version": {
                    "type": "string", 
                    "description": "Operating system version."
                }, 
                "geo_location": {
                    "description": "The measurement agent device location at the time the request was sent or null if the measurement agent doesn't have location information.", 
                    "$ref": "#/definitions/GeoLocationDto"
                }, 
                "agent_type": {
                    "enum": [
                        "MOBILE", 
                        "BROWSER", 
                        "DESKTOP"
                    ], 
                    "type": "string", 
                    "description": "Type of agent."
                }, 
                "code_name": {
                    "type": "string", 
                    "description": "Device code name."
                }, 
                "timezone": {
                    "type": "string", 
                    "description": "The measurement agent's time zone. Is only stored if a measurement is sent to the server."
                }, 
                "app_version_code": {
                    "type": "integer", 
                    "description": "Application version code number (e.g. 10).", 
                    "format": "int32"
                }, 
                "model": {
                    "type": "string", 
                    "description": "Detailed device designation."
                }, 
                "api_level": {
                    "type": "string", 
                    "description": "API level of operating system or SDK (e.g. Android API level or Swift SDK version)."
                }
            }, 
            "title": "ApiRequestInfo"
        }, 
        "DisassociateResponse": {
            "type": "object", 
            "description": "This DTO is returned to the measurement agent after a successful disassociation.", 
            "title": "DisassociateResponse"
        }, 
        "BriefMeasurementResponse": {
            "description": "The BriefMeasurementResponse contains the most important values of a measurement. It is used to show a preview (list) of measurements to the end user.", 
            "required": [
                "device_info", 
                "duration_ns", 
                "measurements", 
                "network_type_id", 
                "network_type_name", 
                "start_time", 
                "type", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "network_type_name": {
                    "type": "string", 
                    "description": "Network type name."
                }, 
                "speedMeasurementAvailable": {
                    "type": "boolean"
                }, 
                "start_time": {
                    "type": "string", 
                    "description": "Overall start time in UTC.", 
                    "format": "date-time"
                }, 
                "measurements": {
                    "additionalProperties": {
                        "$ref": "#/definitions/BriefSubMeasurement"
                    }, 
                    "type": "object", 
                    "description": "Map that contains available information for each measurement type (Speed, QoS). If map misses speed then no speed measurement was done, likewise for QoS, ..."
                }, 
                "network_type_id": {
                    "type": "integer", 
                    "description": "Network type id.", 
                    "format": "int32"
                }, 
                "duration_ns": {
                    "type": "integer", 
                    "description": "Overall duration of all sub measurements.", 
                    "format": "int64"
                }, 
                "device_info": {
                    "description": "BriefDeviceInfo contains the most important values from DeviceInfo class.", 
                    "$ref": "#/definitions/BriefDeviceInfo"
                }, 
                "qoSMeasurementAvailable": {
                    "type": "boolean"
                }, 
                "first_accurate_geo_location": {
                    "description": "The first accurate GeoLocation i.e. the location where the measurement was started.", 
                    "$ref": "#/definitions/GeoLocationDto"
                }, 
                "type": {
                    "enum": [
                        "MOBILE", 
                        "BROWSER", 
                        "DESKTOP"
                    ], 
                    "type": "string", 
                    "description": "The type of measurement agent."
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "The UUIDv4 identifier of the measurement object."
                }
            }, 
            "title": "BriefMeasurementResponse"
        }, 
        "MeasurementResultNetworkPointInTimeDto": {
            "description": "This DTO contains all relevant network information of a single point in time.", 
            "required": [
                "network_type_id", 
                "relative_time_ns", 
                "time"
            ], 
            "type": "object", 
            "properties": {
                "network_operator_mcc_mnc": {
                    "type": "string", 
                    "description": "The MCC/MNC of the network operator, if available."
                }, 
                "ssid": {
                    "type": "string", 
                    "description": "SSID of the network."
                }, 
                "bssid": {
                    "type": "string", 
                    "description": "BSSID of the network."
                }, 
                "network_operator_name": {
                    "type": "string", 
                    "description": "The network operator name, if available."
                }, 
                "network_type_id": {
                    "type": "integer", 
                    "description": "Network type id as it gets returned by the Android API.", 
                    "format": "int32"
                }, 
                "sim_operator_mcc_mnc": {
                    "type": "string", 
                    "description": "The MCC/MNC of the SIM operator, if available."
                }, 
                "network_country": {
                    "type": "string", 
                    "description": "The network operator country code (e.g. \"AT\"), if available."
                }, 
                "time": {
                    "type": "string", 
                    "description": "Time and date the signal information was captured (UTC).", 
                    "format": "date-time"
                }, 
                "sim_country": {
                    "type": "string", 
                    "description": "The SIM operator country code (e.g. \"AT\"), if available."
                }, 
                "relative_time_ns": {
                    "type": "integer", 
                    "description": "Time and date the signal information was captured (UTC).", 
                    "format": "int64"
                }, 
                "sim_operator_name": {
                    "type": "string", 
                    "description": "SIM operator name, if available."
                }
            }, 
            "title": "MeasurementResultNetworkPointInTimeDto"
        }, 
        "ApiResponse\u00abDisassociateResponse\u00bb": {
            "description": "Object that is used as wrapper for every response.", 
            "required": [
                "data"
            ], 
            "type": "object", 
            "properties": {
                "errors": {
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }, 
                    "type": "array", 
                    "description": "Optional list of errors that occurred during request processing."
                }, 
                "data": {
                    "description": "Actual data that is returned for the request/response.", 
                    "$ref": "#/definitions/DisassociateResponse"
                }
            }, 
            "title": "ApiResponse\u00abDisassociateResponse\u00bb"
        }, 
        "ApiError": {
            "description": "DTO that wraps server errors and/or exceptions. The Java stack-trace is only added if the service runs in development mode.", 
            "required": [
                "error", 
                "message", 
                "path", 
                "status", 
                "time"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "description": "Status code for the error.", 
                    "type": "integer", 
                    "example": "400, 404, 500, ...", 
                    "format": "int32"
                }, 
                "exception": {
                    "type": "string", 
                    "description": "Exception class name."
                }, 
                "trace": {
                    "type": "string", 
                    "description": "Exception stack tracewhich is only added if the service runs in development mode."
                }, 
                "error": {
                    "type": "string", 
                    "example": "'Internal Server Error', 'Not Found', ...", 
                    "description": "String representation of the status."
                }, 
                "time": {
                    "type": "string", 
                    "description": "Date and time at which the error occurred.", 
                    "format": "date-time"
                }, 
                "path": {
                    "type": "string", 
                    "description": "URI path/resource that caused the error."
                }, 
                "message": {
                    "type": "string", 
                    "example": "java.lang.RuntimeException", 
                    "description": "The error or exception message."
                }
            }, 
            "title": "ApiError"
        }, 
        "CellLocationDto": {
            "description": "Cell location information from a point in time on the measurement agent.", 
            "required": [
                "relative_time_ns", 
                "time"
            ], 
            "type": "object", 
            "properties": {
                "cell_id": {
                    "type": "integer", 
                    "description": "Contains the cell-ID, if available.", 
                    "format": "int32"
                }, 
                "area_code": {
                    "type": "integer", 
                    "description": "Contains the area code (e.g. location area code (GSM), tracking area code (LTE)), if available.", 
                    "format": "int32"
                }, 
                "longitude": {
                    "type": "number", 
                    "description": "Geographic location longitude of this cell.", 
                    "format": "double"
                }, 
                "primary_scrambling_code": {
                    "type": "integer", 
                    "description": "Contains the primary scrambling code, if available.", 
                    "format": "int32"
                }, 
                "time": {
                    "type": "string", 
                    "description": "Time and date the cell location information was captured (UTC).", 
                    "format": "date-time"
                }, 
                "latitude": {
                    "type": "number", 
                    "description": "Geographic location latitude of this cell.", 
                    "format": "double"
                }, 
                "relative_time_ns": {
                    "type": "integer", 
                    "description": "Relative time in nanoseconds (to test begin).", 
                    "format": "int64"
                }, 
                "arfcn": {
                    "type": "integer", 
                    "description": "Contains the ARFCN (Absolute Radio Frequency Channel Number) (e.g. 16-bit GSM ARFCN or 18-bit LTE EARFCN), if available.", 
                    "format": "int32"
                }
            }, 
            "title": "CellLocationDto"
        }, 
        "DetailMeasurementGroup": {
            "description": "Measurement detail group object which contains a translated title, an optional description, and icon and the items.", 
            "required": [
                "description", 
                "icon_character", 
                "items", 
                "title"
            ], 
            "type": "object", 
            "properties": {
                "icon_character": {
                    "type": "string", 
                    "description": "The icon to be used for the given group (as a single char in the corresponding icon font)."
                }, 
                "title": {
                    "type": "string", 
                    "description": "The already translated title of the given group."
                }, 
                "description": {
                    "type": "string", 
                    "description": "The already translated (optional) description of the given group."
                }, 
                "items": {
                    "items": {
                        "$ref": "#/definitions/DetailMeasurementGroupItem"
                    }, 
                    "type": "array", 
                    "description": "Contains all the entries of the given group."
                }
            }, 
            "title": "DetailMeasurementGroup"
        }, 
        "ApiPagination\u00abBriefMeasurementResponse\u00bb": {
            "description": "Wrapper for paginated responses (e.g. list of measurements).", 
            "required": [
                "content", 
                "page_number", 
                "page_size", 
                "total_elements", 
                "total_pages"
            ], 
            "type": "object", 
            "properties": {
                "content": {
                    "items": {
                        "$ref": "#/definitions/BriefMeasurementResponse"
                    }, 
                    "type": "array", 
                    "description": "Paginated list of objects."
                }, 
                "total_elements": {
                    "type": "integer", 
                    "description": "Total amount of objects (>= 0).", 
                    "format": "int64"
                }, 
                "page_number": {
                    "type": "integer", 
                    "description": "Current page number (>= 0).", 
                    "format": "int32"
                }, 
                "page_size": {
                    "type": "integer", 
                    "description": "Current page size (> 0).", 
                    "format": "int32"
                }, 
                "total_pages": {
                    "type": "integer", 
                    "description": "Total amount of pages (>= 0).", 
                    "format": "int32"
                }
            }, 
            "title": "ApiPagination\u00abBriefMeasurementResponse\u00bb"
        }, 
        "BriefSubMeasurement": {
            "description": "Brief/short information of a sub measurement.", 
            "required": [
                "duration_ns", 
                "start_time"
            ], 
            "type": "object", 
            "properties": {
                "duration_ns": {
                    "type": "integer", 
                    "description": "Duration of this sub measurement.", 
                    "format": "int64"
                }, 
                "start_time": {
                    "type": "string", 
                    "description": "Start time of this sub measurement in UTC.", 
                    "format": "date-time"
                }
            }, 
            "title": "BriefSubMeasurement"
        }, 
        "FullSubMeasurement": {
            "description": "This DTO class is a base class for all specific full measurement classes.", 
            "required": [
                "duration_ns", 
                "end_time", 
                "implausible", 
                "reason", 
                "relative_end_time_ns", 
                "relative_start_time_ns", 
                "start_time", 
                "status"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "enum": [
                        "STARTED", 
                        "FINISHED", 
                        "FAILED", 
                        "ABORTED"
                    ], 
                    "type": "string", 
                    "description": "The status of a measurement."
                }, 
                "relative_start_time_ns": {
                    "type": "integer", 
                    "description": "Start time in nanoseconds relative to the start time of the overall measurement object.", 
                    "format": "int64"
                }, 
                "version_library": {
                    "type": "string", 
                    "description": "The library version this measurement used, if available."
                }, 
                "start_time": {
                    "type": "string", 
                    "description": "Start Date and time for this sub measurement. Date and time is always stored as UTC.", 
                    "format": "date-time"
                }, 
                "relative_end_time_ns": {
                    "type": "integer", 
                    "description": "End time in nanoseconds relative to the end time of the overall measurement object.", 
                    "format": "int64"
                }, 
                "duration_ns": {
                    "type": "integer", 
                    "description": "Duration of a measurement.", 
                    "format": "int64"
                }, 
                "reason": {
                    "enum": [
                        "UNABLE_TO_CONNECT", 
                        "CONNECTION_LOST", 
                        "NETWORK_CATEGORY_CHANGED", 
                        "APP_BACKGROUNDED", 
                        "USER_ABORTED"
                    ], 
                    "type": "string", 
                    "description": "The reason why a measurement failed."
                }, 
                "end_time": {
                    "type": "string", 
                    "description": "End Date and time for this sub measurement. Date and time is always stored as UTC.", 
                    "format": "date-time"
                }, 
                "implausible": {
                    "type": "boolean", 
                    "description": "Flag to mark this QoS measurement as implausible. An implausible QoS result is one that could not have been measured that way. This flag exists for potentially tampered results, so they do not count as valid results (e.g. to prevent tampering w/statistics)."
                }, 
                "version_protocol": {
                    "type": "string", 
                    "description": "The protocol version this measurement used, if available."
                }
            }, 
            "title": "FullSubMeasurement"
        }, 
        "MeasurementTypeParameters": {
            "type": "object", 
            "description": "Base class for sub measurement parameters that are sent to the measurement agent. These can contain special measurement instructions (e.g. stream count, duration, timeouts, ...).", 
            "title": "MeasurementTypeParameters"
        }, 
        "SignalDto": {
            "description": "Contains signal information from a point in time on the measurement agent.", 
            "required": [
                "network_type_id", 
                "relative_time_ns", 
                "time"
            ], 
            "type": "object", 
            "properties": {
                "lte_rssnr_db": {
                    "type": "integer", 
                    "description": "The LTE reference signal signal-to-noise ratio, in dB (If available).", 
                    "format": "int32"
                }, 
                "lte_rsrp_dbm": {
                    "type": "integer", 
                    "description": "The LTE reference signal received power, in dBm (If available).", 
                    "format": "int32"
                }, 
                "lte_cqi": {
                    "type": "integer", 
                    "description": "The LTE channel quality indicator (If available).", 
                    "format": "int32"
                }, 
                "lte_rsrp_db": {
                    "type": "integer", 
                    "description": "The LTE reference signal received quality, in dB (If available).", 
                    "format": "int32"
                }, 
                "wifi_bssid": {
                    "type": "string", 
                    "description": "BSSID of the network (if available)."
                }, 
                "network_type_id": {
                    "type": "integer", 
                    "description": "Network type id as it gets returned by the Android API.", 
                    "format": "int32"
                }, 
                "wifi_rssi_dbm": {
                    "type": "integer", 
                    "description": "The received signal strength indicator of the current 802.11 network, in dBm (If available).", 
                    "format": "int32"
                }, 
                "signal_strength_2g3g_dbm": {
                    "type": "integer", 
                    "description": "The received signal strength of 2G or 3G connections, in dBm (If available).", 
                    "format": "int32"
                }, 
                "time": {
                    "type": "string", 
                    "description": "Time and date the signal information was captured (UTC).", 
                    "format": "date-time"
                }, 
                "wifi_link_speed_bps": {
                    "type": "integer", 
                    "description": "The current WiFi link speed, in bits per second (If available).", 
                    "format": "int32"
                }, 
                "wifi_ssid": {
                    "type": "string", 
                    "description": "SSID of the network (if available)."
                }, 
                "relative_time_ns": {
                    "type": "integer", 
                    "description": "Relative time in nanoseconds (to test begin).", 
                    "format": "int64"
                }
            }, 
            "title": "SignalDto"
        }, 
        "MeasurementResultResponse": {
            "description": "This DTO is returned after the measurement agent successfully submitted it's test result to the server.", 
            "required": [
                "open_data_uuid", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "open_data_uuid": {
                    "type": "string", 
                    "description": "An UUIDv4 identifier that is used to find this measurement in an open-data context."
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "The UUIDv4 identifier of the measurement."
                }
            }, 
            "title": "MeasurementResultResponse"
        }, 
        "DetailMeasurementGroupItem": {
            "description": "This class specifies a single detail item with key, translated title, value and the unit of the value.", 
            "required": [
                "key", 
                "title", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "value": {
                    "type": "string", 
                    "description": "The actual value of this item in the given unit."
                }, 
                "unit": {
                    "type": "string", 
                    "description": "The unit of the value."
                }, 
                "key": {
                    "type": "string", 
                    "description": "The key is the path to the chosen field inside the data model, e.g. \"device_info.model\"."
                }, 
                "title": {
                    "type": "string", 
                    "description": "The translated title of this item."
                }
            }, 
            "title": "DetailMeasurementGroupItem"
        }, 
        "VersionResponse": {
            "description": "Class for all kind of versions that the server reveals.", 
            "type": "object", 
            "properties": {
                "collector_service_version": {
                    "type": "string", 
                    "description": "Collector service version number."
                }, 
                "statistic_service_version": {
                    "type": "string", 
                    "description": "Statistic service version number."
                }, 
                "controller_service_version": {
                    "type": "string", 
                    "description": "Controller service version number."
                }, 
                "map_service_version": {
                    "type": "string", 
                    "description": "Map service version number."
                }
            }, 
            "title": "VersionResponse"
        }, 
        "ApiResponse\u00abApiPagination\u00abBriefMeasurementResponse\u00bb\u00bb": {
            "description": "Object that is used as wrapper for every response.", 
            "required": [
                "data"
            ], 
            "type": "object", 
            "properties": {
                "errors": {
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }, 
                    "type": "array", 
                    "description": "Optional list of errors that occurred during request processing."
                }, 
                "data": {
                    "description": "Actual data that is returned for the request/response.", 
                    "$ref": "#/definitions/ApiPagination\u00abBriefMeasurementResponse\u00bb"
                }
            }, 
            "title": "ApiResponse\u00abApiPagination\u00abBriefMeasurementResponse\u00bb\u00bb"
        }, 
        "LmapReportDto": {
            "description": "This module defines a data model for reporting results from Measurement Agents, which are part of a Large-Scale Measurement Platform (LMAP), to result data Collectors.", 
            "required": [
                "additional_request_info", 
                "date", 
                "result", 
                "time_based_result"
            ], 
            "type": "object", 
            "properties": {
                "measurement-point": {
                    "type": "string", 
                    "description": "The measurement-point of the agent from which this report originates."
                }, 
                "group-id": {
                    "type": "string", 
                    "description": "The group-id of the agent from which this report originates."
                }, 
                "agent-id": {
                    "type": "string", 
                    "description": "The agent-id of the agent from which this report originates."
                }, 
                "time_based_result": {
                    "description": "This module defines a data model for reporting time based results from Measurement Agents.", 
                    "$ref": "#/definitions/TimeBasedResultDto"
                }, 
                "result": {
                    "items": {
                        "$ref": "#/definitions/LmapResultDto\u00abobject\u00bb"
                    }, 
                    "type": "array", 
                    "description": "The list of Tasks for which results are reported."
                }, 
                "additional_request_info": {
                    "description": "Additional information that is sent by client alongside the request. This contains most information from ClientInfo.", 
                    "$ref": "#/definitions/ApiRequestInfo"
                }, 
                "date": {
                    "type": "string", 
                    "description": "The date and time when this result report was sent to a Collector.", 
                    "format": "date-time"
                }
            }, 
            "title": "LmapReportDto"
        }, 
        "ApiResponse\u00abVersionResponse\u00bb": {
            "description": "Object that is used as wrapper for every response.", 
            "required": [
                "data"
            ], 
            "type": "object", 
            "properties": {
                "errors": {
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }, 
                    "type": "array", 
                    "description": "Optional list of errors that occurred during request processing."
                }, 
                "data": {
                    "description": "Actual data that is returned for the request/response.", 
                    "$ref": "#/definitions/VersionResponse"
                }
            }, 
            "title": "ApiResponse\u00abVersionResponse\u00bb"
        }, 
        "DetailMeasurementResponse": {
            "description": "This DTO contains a list of detail groups.", 
            "required": [
                "groups"
            ], 
            "type": "object", 
            "properties": {
                "groups": {
                    "items": {
                        "$ref": "#/definitions/DetailMeasurementGroup"
                    }, 
                    "type": "array", 
                    "description": "A list of detail groups."
                }
            }, 
            "title": "DetailMeasurementResponse"
        }, 
        "LmapResultDto\u00abobject\u00bb": {
            "description": "This module defines a data model for a single reporting result, which is a part of a Large-Scale Measurement Platform (LMAP).", 
            "required": [
                "conflict", 
                "option", 
                "results", 
                "start", 
                "status", 
                "tag"
            ], 
            "type": "object", 
            "properties": {
                "cycle-number": {
                    "type": "string", 
                    "description": "The optional cycle number is the time closest to the time reported in the event leaf that is a multiple of the cycle-interval of the event that triggered the execution of the Schedule.  The value is only present if the event that triggered the execution of the Schedule has a defined cycle-interval."
                }, 
                "status": {
                    "type": "integer", 
                    "description": "The status code returned by the execution of this Action.", 
                    "format": "int32"
                }, 
                "task": {
                    "type": "string", 
                    "description": "The name of the Task that produced the result."
                }, 
                "end": {
                    "type": "string", 
                    "description": "The date and time when the Task producing this result finished.", 
                    "format": "date-time"
                }, 
                "option": {
                    "items": {
                        "$ref": "#/definitions/LmapOptionDto"
                    }, 
                    "type": "array", 
                    "description": "The list of options there were in use when the measurement was performed.  This list must include both the Task-specific options as well as the Action-specific options."
                }, 
                "parameters": {
                    "type": "object", 
                    "description": "This container is a placeholder for runtime parameters defined in Task-specific data models augmenting the base LMAP report data model."
                }, 
                "schedule": {
                    "type": "string", 
                    "description": "The name of the Schedule that produced the result."
                }, 
                "results": {
                    "items": {
                        "type": "object"
                    }, 
                    "type": "array", 
                    "description": "A list of results. Replaces the table list from LMAP"
                }, 
                "start": {
                    "type": "string", 
                    "description": "The date and time when the Task producing this result started.", 
                    "format": "date-time"
                }, 
                "tag": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "A tag contains additional information that is passed with the result record to the Collector.  This is the joined set of tags defined for the Task object, the Schedule object, and the Action object. A tag can be used to carry the Measurement Cycle ID."
                }, 
                "action": {
                    "type": "string", 
                    "description": "The name of the Action in the Schedule that produced the result."
                }, 
                "event": {
                    "type": "string", 
                    "description": "The date and time of the event that triggered the Schedule of the Action that produced the reported result values.  The date and time does not include any added randomization.", 
                    "format": "date-time"
                }, 
                "conflict": {
                    "items": {
                        "$ref": "#/definitions/LmapConflictDto"
                    }, 
                    "type": "array", 
                    "description": "The names of Tasks overlapping with the execution of the Task that has produced this result."
                }
            }, 
            "title": "LmapResultDto\u00abobject\u00bb"
        }, 
        "PointInTimeValueDto\u00abdouble\u00bb": {
            "description": "Holds a measurement agent-side value from a point in time.", 
            "required": [
                "relative_time_ns", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "value": {
                    "type": "number", 
                    "description": "The value recorded at this point in time.", 
                    "format": "double"
                }, 
                "relative_time_ns": {
                    "type": "integer", 
                    "description": "The relative time in nanoseconds to the measurement start.", 
                    "format": "int64"
                }
            }, 
            "title": "PointInTimeValueDto\u00abdouble\u00bb"
        }, 
        "OperatingSystemInfoDto": {
            "description": "Contains information about the measurement agent's OS.", 
            "required": [
                "name", 
                "version"
            ], 
            "type": "object", 
            "properties": {
                "cpu_min": {
                    "type": "number", 
                    "description": "Minimum CPU usage, as double between 0 - 100.", 
                    "format": "double"
                }, 
                "cpu_median": {
                    "type": "number", 
                    "description": "Median CPU usage, as double between 0 - 100.", 
                    "format": "double"
                }, 
                "cpu_max": {
                    "type": "number", 
                    "description": "Maximum CPU usage, as double between 0 - 100.", 
                    "format": "double"
                }, 
                "memory_median": {
                    "type": "number", 
                    "description": "Median Memory usage, as double between 0 - 100.", 
                    "format": "double"
                }, 
                "cpu_average": {
                    "type": "number", 
                    "description": "Average CPU usage, as double between 0 - 100.", 
                    "format": "double"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Operating system name (e.g. Android or iOS)."
                }, 
                "memory_min": {
                    "type": "number", 
                    "description": "Minimum Memory usage, as double between 0 - 100.", 
                    "format": "double"
                }, 
                "version": {
                    "type": "string", 
                    "description": "Operating system version."
                }, 
                "memory_max": {
                    "type": "number", 
                    "description": "Maximum Memory usage, as double between 0 - 100.", 
                    "format": "double"
                }, 
                "api_level": {
                    "type": "string", 
                    "description": "API level of operating system or SDK (e.g. Android API level or Swift SDK version)."
                }, 
                "memory_average": {
                    "type": "number", 
                    "description": "Average Memory usage, as double between 0 - 100.", 
                    "format": "double"
                }
            }, 
            "title": "OperatingSystemInfoDto"
        }
    }, 
    "swagger": "2.0"
}